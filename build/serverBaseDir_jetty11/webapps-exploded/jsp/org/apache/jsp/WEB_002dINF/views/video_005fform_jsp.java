/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.11
 * Generated at: 2025-07-06 21:31:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.example.voting.model.Video;

public final class video_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.example.voting.model.Video");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    Video video = (Video) request.getAttribute("video");
    boolean isEdit = (video != null);

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>");
      out.print( isEdit ? "Edit Video" : "Add Video" );
      out.write("</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/style.css\">\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("    <style>\n");
      out.write("        .form-container {\n");
      out.write("            max-width: 600px;\n");
      out.write("            margin: 60px auto;\n");
      out.write("            padding: 30px;\n");
      out.write("            background-color: #202020;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            color: #ffffff;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-container h2 {\n");
      out.write("            text-align: center;\n");
      out.write("            color: #ff4500;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-container label {\n");
      out.write("            display: block;\n");
      out.write("            margin-top: 15px;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-container input, .form-container textarea {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 10px;\n");
      out.write("            background-color: #282828;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-container input[type=\"file\"] {\n");
      out.write("            padding: 5px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-container button {\n");
      out.write("            margin-top: 25px;\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 12px;\n");
      out.write("            background-color: #ff4500;\n");
      out.write("            border: none;\n");
      out.write("            color: white;\n");
      out.write("            font-weight: bold;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-container button:hover {\n");
      out.write("            background-color: #e03e00;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .preview-img {\n");
      out.write("            margin-top: 15px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .preview-img img {\n");
      out.write("            max-width: 100%;\n");
      out.write("            border-radius: 5px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .back-link {\n");
      out.write("            display: block;\n");
      out.write("            margin-top: 20px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .back-link a {\n");
      out.write("            color: #ff4500;\n");
      out.write("            text-decoration: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .back-link a:hover {\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"form-container\">\n");
      out.write("    <h2>");
      out.print( isEdit ? "Edit Video" : "Add New Video" );
      out.write("</h2>\n");
      out.write("\n");
      out.write("    <form method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/videos\" enctype=\"multipart/form-data\">\n");
      out.write("        ");
 if (isEdit) { 
      out.write("\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( video.getId() );
      out.write("\">\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("        <label for=\"title\">Title:</label>\n");
      out.write("        <input type=\"text\" name=\"title\" required value=\"");
      out.print( isEdit ? video.getTitle() : "" );
      out.write("\">\n");
      out.write("\n");
      out.write("        <label for=\"description\">Description:</label>\n");
      out.write("        <textarea name=\"description\" required rows=\"3\">");
      out.print( isEdit ? video.getDescription() : "" );
      out.write("</textarea>\n");
      out.write("\n");
      out.write("        <label for=\"youtubeId\">YouTube ID:</label>\n");
      out.write("        <input type=\"text\" name=\"youtubeId\" required value=\"");
      out.print( isEdit ? video.getYoutubeId() : "" );
      out.write("\">\n");
      out.write("\n");
      out.write("        <label for=\"thumbnail\">Upload Custom Thumbnail (optional):</label>\n");
      out.write("        <input type=\"file\" name=\"thumbnail\">\n");
      out.write("\n");
      out.write("        <div class=\"preview-img\">\n");
      out.write("            ");

                String thumb = null;

                if (isEdit && video != null) {
                    thumb = video.getThumbnailUrl();

                    if (thumb == null || thumb.trim().isEmpty()) {
                        thumb = "https://img.youtube.com/vi/" + video.getYoutubeId() + "/0.jpg";
                    } else if (!thumb.startsWith("http")) {
                        thumb = request.getContextPath() + "/" + thumb;
                    }
                } else {
                    
                    String tempYoutubeId = request.getParameter("youtubeId");
                    if (tempYoutubeId != null && !tempYoutubeId.isEmpty()) {
                        thumb = "https://img.youtube.com/vi/" + tempYoutubeId + "/0.jpg";
                    }
                }
            
      out.write("\n");
      out.write("\n");
      out.write("            ");
 if (thumb != null) { 
      out.write("\n");
      out.write("                <img src=\"");
      out.print( thumb );
      out.write("\" alt=\"Preview thumbnail\">\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <button type=\"submit\">");
      out.print( isEdit ? "Update Video" : "Add Video" );
      out.write("</button>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    <div class=\"back-link\">\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/videos\">Back to Video List</a>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
